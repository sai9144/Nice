# Prompt the user for the username and password
$Uname = Read-Host "Enter Username to update"

# Prompt the user for the server password and convert it to plain text
$serverPassword = Read-Host -AsSecureString "Enter Server Password"
$value = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto(
    [System.Runtime.InteropServices.Marshal]::SecureStringToGlobalAllocUnicode($serverPassword)
)

# Define the list of servers
$servers = Get-Content "C:\Scripts\Allservers.txt"
# Prompt the user for the username and password
$Uname = Read-Host "Enter Username to update"

# Prompt the user for the server password and convert it to plain text
$serverPassword = Read-Host -AsSecureString "Enter Server Password"
$value = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto(
    [System.Runtime.InteropServices.Marshal]::SecureStringToGlobalAllocUnicode($serverPassword)
)

# Define the list of servers
$servers = Get-Content "C:\Scripts\Allservers.txt"

# Define the list of services and the start sequence
$services = @("NexidiaConfig","NexidiaBackgroundWorker","NexidiaDataCompliance","NexidiaDiscovery","NexidiaEvaluationsAging","NexidiaIngest","NexidiaReplay","NexidiaSearch","NxGridGateway","NxGridControl","NxGridBase","NxGridAgent")
$startSequence = $services | Sort-Object

# Iterate over each server in the list
foreach ($server in $servers) {
    # Stop the NexidiaConfig service first, then the rest of the services sorted by name
    foreach ($service in "NexidiaConfig", ($services | Sort-Object)) {
        Invoke-Command -ComputerName $server -ScriptBlock {            
            Get-Service -Name $using:service | Stop-Service -Force
        }
    }

    # Change the service account and password for the services
    foreach ($service in $services) {
        Invoke-Command -ComputerName $server -ScriptBlock {
            $serviceName = $using:service
            $userName = $using:Uname
            $password = $using:value

            # Change the service account and password
            $act = sc.exe config $serviceName obj= $userName password= $password
            if ($act) {
                Write-Output "$Using:server Service Account Change Succeeded for $serviceName"
            } else {
                Write-Output "$Using::server Service Account Change Failed for $serviceName"
            }
        }
    }

    # Start the services in the specified order
    foreach ($service in $startSequence) {
        Invoke-Command -ComputerName $server -ScriptBlock {
            Get-Service -Name $using:service | Start-Service
        }
    }
}
