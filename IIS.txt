# Prompt user to enter new username and password
$cred = Get-Credential -Message "Enter new username and password"

# Loop through each App Pool name
foreach ($appPoolName in @("MicroStrategyWebPool", "NxIAAgentObserverAppPool", "NxIAAutoDiscoveryAppPool", "NxIAAutoDiscoveryProxyAppPool", "NxIADiscoveryAppPool", "NxIAEvaluationsAppPool", "NxIAEvaluationScorecardsAppPool", "NxIAEvaluationsPortalAppPool", "NxIAKnowledgeBaseAppPool", "NxIAMainAppPool", "NxIAPortalAppPool", "NxIARestApiAppPool", "NxIARootAppPool", "NxIASearchAppPool", "NxIAWebServicesAppPool")) {
    
    # Get current App Pool user identity
    $appPool = Get-WebAppPoolState -Name $appPoolName
    $currentUsername = $appPool.processModel.userName
    
    # If current username is not the same as the new username, update it
    if ($currentUsername -ne $cred.UserName) {
        Set-WebConfigurationProperty "/system.applicationHost/applicationPools/add[@name='$appPoolName']/processModel" -Name "userName" -Value $cred.UserName -PSPath "IIS:\"
        Set-WebConfigurationProperty "/system.applicationHost/applicationPools/add[@name='$appPoolName']/processModel" -Name "password" -Value $cred.Password -PSPath "IIS:\"
        
        Write-Host "Updated App Pool '$appPoolName' to use user '$($cred.UserName)'." -ForegroundColor Green
    }
}
