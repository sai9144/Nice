#!/bin/bash

# Directory containing the received files
SOURCE_DIR="/path/to/source/files"

# Arrays to store successful and unsuccessful operations
success_files=()
failed_files=()

# Process each file in the source directory
for file in "$SOURCE_DIR"/*; do
    # Extract the header path
    header_line=$(grep "^# \$Header" "$file" | head -n 1)
    
    if [[ -z $header_line ]]; then
        echo "No header found in file $file, skipping..."
        failed_files+=("$file (No header found)")
        continue
    fi
    
    # Extract the directory and target filename from the header
    header_path=$(echo "$header_line" | sed 's/^# \$Header: //')
    target_dir=$(dirname "$header_path")
    target_file=$(basename "$header_path")
    
    # Check if the directory exists
    if [[ ! -d $target_dir ]]; then
        read -p "Directory $target_dir does not exist. Create it? (y/n): " create_dir
        if [[ $create_dir == "y" ]]; then
            mkdir -p "$target_dir"
            echo "Directory $target_dir created."
        else
            echo "Skipping $file as directory $target_dir does not exist."
            failed_files+=("$file (Directory not created)")
            continue
        fi
    fi
    
    # Check if a file with the target name already exists
    if [[ -f "$target_dir/$target_file" ]]; then
        # Backup the existing file with a timestamp
        backup_file="${target_dir}/${target_file}_$(date +%Y%m%d%H%M%S)"
        mv "$target_dir/$target_file" "$backup_file"
        echo "Backup of existing file created as $backup_file."
    fi
    
    # Copy the file to the target directory
    if cp "$file" "$target_dir/$target_file"; then
        echo "$file copied to $target_dir/$target_file."
        success_files+=("$file")
    else
        echo "Failed to copy $file to $target_dir/$target_file."
        failed_files+=("$file (Copy failed)")
    fi
done

# Display summary
echo -e "\nSummary:"
echo "Successful copies:"
for success in "${success_files[@]}"; do
    echo "- $success"
done

echo -e "\nFailed copies:"
for fail in "${failed_files[@]}"; do
    echo "- $fail"
done
